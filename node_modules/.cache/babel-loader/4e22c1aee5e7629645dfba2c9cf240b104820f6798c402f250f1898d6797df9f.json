{"ast":null,"code":"var _jsxFileName = \"/Users/Qisu/Desktop/Projects/portfolio-new/task-manager/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport UnfinishedList from './components/UnfinishedList';\nimport FinishedList from './components/FinishedList';\nimport { DndContext } from '@dnd-kit/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const today = new Date().toLocaleDateString();\n  const addTask = () => {\n    if (!newTaskTitle.trim()) return;\n    const newTask = {\n      id: Date.now(),\n      title: newTaskTitle,\n      isFinished: false,\n      isPrioritized: false\n    };\n    setTasks([...tasks, newTask]);\n    setNewTaskTitle(\"\");\n  };\n\n  // Placeholder functions for future functionality\n  const toggleFinish = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      isFinished: !task.isFinished\n    } : task));\n  };\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const prioritizeTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      isPrioritized: !task.isPrioritized\n    } : task));\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) {\n      return;\n    }\n    const activeTask = tasks.find(task => task.id === active.id);\n    const isDroppingOnFinished = over.id === 'finished';\n    if (activeTask && activeTask.isFinished !== isDroppingOnFinished) {\n      setTasks(prev => prev.map(task => task.id === active.id ? {\n        ...task,\n        isFinished: isDroppingOnFinished\n      } : task));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Today is \", today]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTaskTitle,\n        onChange: e => setNewTaskTitle(e.target.value),\n        placeholder: \"Add a new task\",\n        className: \"border border-gray-300 p-2 mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(UnfinishedList, {\n          tasks: tasks,\n          toggleFinish: toggleFinish,\n          removeTask: removeTask,\n          prioritizeTask: prioritizeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FinishedList, {\n          tasks: tasks,\n          removeTask: removeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"szfMxnW5ZnesIeXXE4Ldcca8dfE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UnfinishedList","FinishedList","DndContext","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTaskTitle","setNewTaskTitle","today","Date","toLocaleDateString","addTask","trim","newTask","id","now","title","isFinished","isPrioritized","toggleFinish","map","task","removeTask","filter","prioritizeTask","handleDragEnd","event","active","over","activeTask","find","isDroppingOnFinished","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","onDragEnd","_c","$RefreshReg$"],"sources":["/Users/Qisu/Desktop/Projects/portfolio-new/task-manager/src/App.tsx"],"sourcesContent":["// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\nimport UnfinishedList from './components/UnfinishedList';\nimport FinishedList from './components/FinishedList';\nimport { Task } from './types';\nimport { DndContext } from '@dnd-kit/core';\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n\n  const today = new Date().toLocaleDateString();\n\n  const addTask = () => {\n    if (!newTaskTitle.trim()) return;\n    const newTask = { id: Date.now(), title: newTaskTitle, isFinished: false, isPrioritized: false };\n    setTasks([...tasks, newTask]);\n    setNewTaskTitle(\"\");\n  };\n\n  // Placeholder functions for future functionality\n  const toggleFinish = (id: number) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, isFinished: !task.isFinished } : task));\n  };\n\n  const removeTask = (id: number) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const prioritizeTask = (id: number) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, isPrioritized: !task.isPrioritized } : task));\n  };\n\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n\n    if (!over) {\n      return;\n    }\n\n    const activeTask = tasks.find(task => task.id === active.id);\n    const isDroppingOnFinished = over.id === 'finished';\n\n    if (activeTask && activeTask.isFinished !== isDroppingOnFinished) {\n      setTasks(prev =>\n        prev.map(task =>\n          task.id === active.id ? { ...task, isFinished: isDroppingOnFinished } : task\n        )\n      );\n    }\n  };\n\n\n  return (\n    <div className=\"container mx-auto mt-10\">\n      <h1 className=\"text-2xl font-bold mb-4\">Today is {today}</h1>\n      <div className=\"mb-8\">\n        <input\n          type=\"text\"\n          value={newTaskTitle}\n          onChange={(e) => setNewTaskTitle(e.target.value)}\n          placeholder=\"Add a new task\"\n          className=\"border border-gray-300 p-2 mr-4\"\n        />\n        <button onClick={addTask} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n          Add Task\n        </button>\n      </div>\n      <DndContext onDragEnd={handleDragEnd}>\n        <div className=\"flex justify-between space-x-4\">\n          <UnfinishedList tasks={tasks} toggleFinish={toggleFinish} removeTask={removeTask} prioritizeTask={prioritizeTask} />\n          <FinishedList tasks={tasks} removeTask={removeTask} />\n        </div>\n      </DndContext>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}