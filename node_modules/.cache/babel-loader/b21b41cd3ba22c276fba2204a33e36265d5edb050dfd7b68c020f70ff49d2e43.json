{"ast":null,"code":"var _jsxFileName = \"/Users/Qisu/Desktop/Projects/portfolio-new/task-manager/src/components/UnfinishedList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnfinishedList = ({\n  tasks,\n  toggleFinish,\n  removeTask,\n  prioritizeTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list unfinished-tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"task-list-title\",\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), tasks.filter(task => !task.isFinished).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"custom-checkbox-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"custom-checkbox\",\n          checked: task.isFinished,\n          onChange: () => toggleFinish(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `task-title ${task.isPrioritized ? \"priority-task\" : \"\"}`,\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => prioritizeTask(task.id),\n          className: \"task-action-button prioritize-btn\",\n          children: \"\\u2B50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTask(task.id),\n          className: \"task-action-button remove-btn\",\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = UnfinishedList;\nexport default UnfinishedList;\nvar _c;\n$RefreshReg$(_c, \"UnfinishedList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UnfinishedList","tasks","toggleFinish","removeTask","prioritizeTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","task","isFinished","map","type","checked","onChange","id","isPrioritized","title","onClick","_c","$RefreshReg$"],"sources":["/Users/Qisu/Desktop/Projects/portfolio-new/task-manager/src/components/UnfinishedList.tsx"],"sourcesContent":["import React from 'react';\nimport { Task } from '../types';\n\ninterface Props {\n    tasks: Task[];\n    toggleFinish: (id: number) => void;\n    removeTask: (id: number) => void;\n    prioritizeTask: (id: number) => void;\n}\n\nconst UnfinishedList: React.FC<Props> = ({ tasks, toggleFinish, removeTask, prioritizeTask }) => {\n    return (\n        <div className=\"task-list unfinished-tasks\">\n            <h2 className=\"task-list-title\">To Do</h2>\n            {tasks.filter(task => !task.isFinished).map(task => (\n                <div className=\"task-item\">\n                    <label className=\"custom-checkbox-wrapper\">\n                        <input type=\"checkbox\" className=\"custom-checkbox\" checked={task.isFinished} onChange={() => toggleFinish(task.id)} />\n                        <span className={`task-title ${task.isPrioritized ? \"priority-task\" : \"\"}`}>\n                            {task.title}\n                        </span>\n                    </label>\n                    <div>\n                        <button onClick={() => prioritizeTask(task.id)} className=\"task-action-button prioritize-btn\">⭐</button>\n                        <button onClick={() => removeTask(task.id)} className=\"task-action-button remove-btn\">❌</button>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default UnfinishedList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,cAA+B,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAe,CAAC,KAAK;EAC7F,oBACIL,OAAA;IAAKM,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACvCP,OAAA;MAAIM,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCT,KAAK,CAACU,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC,CAACC,GAAG,CAACF,IAAI,iBAC5Cb,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBP,OAAA;QAAOM,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCP,OAAA;UAAOgB,IAAI,EAAC,UAAU;UAACV,SAAS,EAAC,iBAAiB;UAACW,OAAO,EAAEJ,IAAI,CAACC,UAAW;UAACI,QAAQ,EAAEA,CAAA,KAAMf,YAAY,CAACU,IAAI,CAACM,EAAE;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtHX,OAAA;UAAMM,SAAS,EAAG,cAAaO,IAAI,CAACO,aAAa,GAAG,eAAe,GAAG,EAAG,EAAE;UAAAb,QAAA,EACtEM,IAAI,CAACQ;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACRX,OAAA;QAAAO,QAAA,gBACIP,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACQ,IAAI,CAACM,EAAE,CAAE;UAACb,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxGX,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACS,IAAI,CAACM,EAAE,CAAE;UAACb,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACY,EAAA,GApBItB,cAA+B;AAsBrC,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}